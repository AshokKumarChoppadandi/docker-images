version: '3'

networks:
  confluent_kafka_cluster:
    driver: bridge

services:
  zookeeper:
    image: ashokkumarchoppadandi/confluent-kafka-zookeeper:0.1
    build: 
      context: ./ConfluentZookeeper/    
    networks:
      - confluent_kafka_cluster
    ports:
      - "2181:2181"
    hostname: zookeeper
    environment:
      HOSTNAME: zookeeper
      ZOOKEEPER_HOST: zookeeper
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  broker:
    image: ashokkumarchoppadandi/confluent-kafka-broker:0.1
    build:
      context: ./ConfluentKafkaBroker/
    networks:
      - confluent_kafka_cluster
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    hostname: broker
    environment:
      HOSTNAME: broker
      BROKER_ID: 0
      KAFKA_LISTENERS: PLAINTEXT:\/\/0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT:\/\/broker:9092
      DEFAULT_KAFKA_TOPIC_PARTITIONS: 3
      ZOOKEEPERS_LIST: 'zookeeper:2181'
      CONFLUENT_METADATA_SERVER_ADVERTISED_LISTENERS: http:\/\/broker:8090
  connect:
    image: ashokkumarchoppadandi/confluent-kafka-connect:0.1
    build:
      context: ./ConfluentConnect/
    networks:
      - confluent_kafka_cluster
    depends_on:
      - zookeeper
      - broker
    ports:
      - "8083:8083"
    hostname: connect
    environment:
      HOSTNAME: connect
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT:\/\/broker:9092
      KAFKA_CONNECT_CLUSTER_GROUP_ID: connect-cluster
      KAFKA_CONNECT_KEY_CONVERTOR: io.confluent.connect.avro.AvroConverter
      KAFKA_CONNECT_VALUE_CONVERTOR: io.confluent.connect.avro.AvroConverter
      SCHEMA_REGISTRY_URL: http:\/\/schemaregistry:8081
      CONNECT_CONFIGS_TOPIC: docker-connect-configs
      CONNECT_OFFSETS_TOPIC: docker-connect-offsets
      CONNECT_STATUSES_TOPIC: docker-connect-statuses
      CONFIG_STORAGE_REPLICATION_FACTOR: 1
      OFFSET_STORAGE_REPLICATION_FACTOR: 1
      STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_HOST: connect
      CONNECT_PORT: 8083
  schemaregistry:
    image: ashokkumarchoppadandi/confluent-schema-registry:0.1
    build:
      context: ./ConfluentSchemaRegistry/
    networks:
      - confluent_kafka_cluster
    depends_on:
      - zookeeper
      - broker
    ports:
      - "8081:8081"
    hostname: schemaregistry
    environment:
      HOSTNAME: schemaregistry
      ZOOKEEPERS_LIST: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT:\/\/broker:9092
  postgres:
    image: postgres:11
    networks:
      - confluent_kafka_cluster
    depends_on:
      - zookeeper
      - broker
      - connect
    hostname: postgres
    restart: always
    environment:
      POSTGRES_DB: testdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
  streamsapp:
    image: ashokkumarchoppadandi/confluent-kafka-streams-app:0.1
    build:
      context: ./StreamsApp/
    networks:
      - confluent_kafka_cluster
    depends_on:
      - zookeeper
      - broker
      - connect
      - schemaregistry
    hostname: streamsapp
    environment:
      HOSTNAME: streamsapp
      ENVIRONMENT: dev
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT:\/\/broker:9092
      STREAMS_APP_CONFIG_ID: add-schema-employee
      INPUT_KAFKA_TOPIC: employee
      INPUT_TOPIC_PARTITIONS: 3
      INPUT_TOPIC_REPLICATION_FACTOR: 1
      OUTPUT_KAFKA_TOPIC: employee-with-schema
      OUTPUT_TOPIC_PARTITIONS: 3
      OUTPUT_TOPIC_REPLICATION_FACTOR: 1
      APP_JAR: EmployeeKafkaStreamsApp-1.0-SNAPSHOT.jar
      APP_JAR_PATH: /IdeaProjects/EmployeeKafkaStreamsApp/target/
      CLASS_NAME: com.bigdata.kafka.streams.AddSchemaToEmployeeJsonPayload
    volumes:
      - ~/IdeaProjects:/IdeaProjects:ro
